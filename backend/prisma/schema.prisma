// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String    @unique
  password   String // shouldnt be in plain text, we're using hashing
  status     String    @default("ðŸ‘‹ New to Waves!")
  aboutMe    String    @default("Wave wave ðŸŒŠ. Learning the ways of tides rn tbh.")
  profileImg Bytes?
  calendar Calendar @relation(fields: [calendarId], references: [id])
  calendarId String @unique @db.ObjectId
  friends    String[]

  // Waves invited but not accepted
  invitedWaves   Wave[]   @relation("invited", fields: [invitedWavesId], references: [id])
  invitedWavesId String[] @db.ObjectId

  // Waves created
  createdWaves Wave[] @relation("created")

  // Waves participating
  participateWave    Wave[]   @relation("participate", fields: [participateWaveIds], references: [id])
  participateWaveIds String[] @db.ObjectId
}

model Calendar {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  availabilities Timeslot[]
  user User?
}

// Having timeslot entries means the timeslot is unavailable
type Timeslot {
  startTime DateTime
  endTime   DateTime
  details   String   @default("")
}

model Wave {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  tideTitle    String
  proposedTime DateTime
  endTime      DateTime 
  location     String?
  repeatType   RepeatType @default(NONE)
  notifyUser   Boolean    @default(false)

  invitedUsers   User[]   @relation("invited", fields: [invitedUsersId], references: [id])
  invitedUsersId String[] @db.ObjectId

  hasUsers   User[]   @relation("participate", fields: [hasUsersId], references: [id])
  hasUsersId String[] @db.ObjectId

  createdAt   DateTime @default(now())
  createdBy   User     @relation("created", fields: [createdById], references: [id])
  createdById String   @db.ObjectId
}

enum RepeatType {
  NONE
  DAILY
  WEEKLY
  MONTHLY
}
